openapi: 3.0.0
servers:
  - description: Local server
    url: http://127.0.0.1:8082/api

  - description: Develop server
    url: http://80.208.225.82:8082/api
info:
  description: |
    This is a sample server Petstore server.
    You can find out more about Swagger at
    [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).
    For this sample, you can use the api key `special-key` to test the authorization filters.
    # Introduction
    This API is documented in **OpenAPI format** and is based on
    [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.
    It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)
    tool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard
    OpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).
    # OpenAPI Specification
    This API is documented in **OpenAPI format** and is based on
    [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.
    It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)
    tool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard
    OpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).
    # Cross-Origin Resource Sharing
    This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).
    And that allows cross-domain communication from the browser.
    All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.
    # Authentication
    Petstore offers two forms of authentication:
      - API Key
      - OAuth2
    OAuth2 - an open protocol to allow secure authorization in a simple
    and standard method from web, mobile and desktop applications.
    <SecurityDefinitions />
  version: 1.0.0
  title: Mesgen Logistics
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: Djek-zb
    email: jorayev2494@gmail.com
    url: https://github.com/Djek-zb
  x-logo:
    url: 'https://mesgenlogistics.com/images/logo160.png'
    altText: Mesgen Logistics

#  license:
#    name: Apache 2.0
#    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

# externalDocs:
#   description: Find out how to create Github repo for your OpenAPI spec.
#   url: 'https://github.com/Rebilly/generator-openapi-repo'

#tags:
#  - description: Everything about your Pets
#    name: pet
#
#  - description: Access to Petstore orders
#    name: store
#
#  - description: Operations about user
#    name: user
#
#  - description: |
#      <SchemaDefinition schemaRef="#/components/schemas/Pet" />
#    x-displayName: The Pet Model
#    name: pet_model
#
#  - description: |
#      <SchemaDefinition schemaRef="#/components/schemas/Order" exampleRef="#/components/examples/Order" showReadOnly={true} showWriteOnly={true} />
#    name: store_model
#    x-displayName: The Order Model

#x-tagGroups:
#  - name: General
#    tags:
#      - pet
#      - store
#
#  - name: User Management
#    tags:
#      - user
#
#  - name: Models
#    tags:
#      - pet_model
#      - store_model

paths:
  /admin/sliders:
    get:
      description: "Get sliders"
      tags:
        - Sliders
      responses:
        200:
          description: "Sliders"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SliderSchema'

    post:
      description: "Create a slider"
      tags:
        - Sliders
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - media
              properties:
                media:
                  type: string
                  format: binary
                title:
                  type: string
                  example: "Rabbit in a update."
                text:
                  type: string
                  example: "Ipsa non esse et update."
                is_active:
                  type: boolean
                  example: true
                  enum:
                    - true
                    - false
                  default: true
                position:
                  type: integer
                  example: 1
                  nullable: true
                  minimum: 1
                  maximum: 100
      responses:
        201:
          description: "Created a slider"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SliderSchema'

  /admin/sliders/{id}:
    get:
      description: "Show a slider"
      tags:
        - Sliders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 4
      responses:
        200:
          description: "Show a slider"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SliderSchema'

    post:
      description: "Update a slider"
      tags:
        - Sliders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 6
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                media:
                  type: string
                  format: binary
                title:
                  type: string
                  example: "Rabbit in a update."
                text:
                  type: string
                  example: "Ipsa non esse et update."
                is_active:
                  type: boolean
                  example: true
                  enum:
                    - true
                    - false
                  default: true
                position:
                  type: integer
                  example: 1
                  nullable: true
                  minimum: 1
                  maximum: 100
      responses:
        202:
          description: "Updated a slider"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SliderSchema'

    delete:
      description: "Delete a slider"
      tags:
        - Sliders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 4
      responses:
        204:
          description: "Deleted a slider"

components:
  schemas:
    SliderSchema:
      type: object
      properties:
        id:
          type: integer
          example: 1
        media:
          type: string
          example: "/storage/slider/medias/VvMB5CTPil36941IMTgNF875346XeHxP.jpg"
        title:
          type: string
          example: "Then it got down."
        text:
          type: string
          example: "Quis aut expedita et sed."
        is_active:
          type: boolean
          example: true
          enum:
            - true
            - false
        position:
          type: integer
          example: 2
          minimum: 1
          maximum: 100
          nullable: true
        created_at:
          type: string
          example: "05-04-2022 21:06:47"
        updated_at:
          type: string
          example: "05-04-2022 21:06:47"

  requestBodies:
  securitySchemes:
  examples:
x-webhooks:
